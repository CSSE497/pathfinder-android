buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.5"
}

version = "1.0.1"
group = "xyz.thepathfinder"

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'idea'

sourceCompatibility = 1.7
targetCompatibility = 1.7

configure(allprojects) {
    ext.javadocLinks = [
            "http://docs.oracle.com/javase/7/docs/api/",
            "http://docs.oracle.com/javaee/7/api/",
            "http://google.github.io/gson/apidocs/"
    ] as String[]
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.links(project.ext.javadocLinks)
}

task developerJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = new File("${project.docsDir}", "developerJavadoc")
    classpath = configurations.compile
    options.memberLevel = JavadocMemberLevel.PRIVATE
    options.links(project.ext.javadocLinks)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from developerJavadocs
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task all(dependsOn: ['clean', 'build', 'test', 'javadocs', 'developerJavadocs', 'jar', 'javadocJar', 'sourcesJar']) {
    compileJava.dependsOn clean
}

task upload(dependsOn: ['clean', 'bintrayUpload']) {
    compileJava.dependsOn clean
}

artifacts {
    archives javadocJar, sourcesJar
}

if(project.hasProperty('publishToJcenter')) {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                pom.withXml {
                    asNode().appendNode("name", project.name)
                    asNode().appendNode("description", "Android/Java client library for the Pathfinder service")
                    asNode().appendNode("url", "http://thepathfinder.xyz")
                    Node parent = asNode().appendNode("scm", "")
                    new Node(parent, "connection", "scm:git:git@github.com:CSSE497/pathfinder-android.git")
                    new Node(parent, "developerConnection", "scm:git:git@github.com:CSSE497/pathfinder-android.git")
                    new Node(parent, "url", "https://github.com/CSSE497/pathfinder-android")
                    parent = asNode().appendNode("licenses", "")
                    parent = new Node(parent, "license", "")
                    new Node(parent, "name", "MIT License")
                    new Node(parent, "url", "http://www.opensource.org/licenses/mit-license.php")
                    parent = asNode().appendNode("developers", "")
                    parent = new Node(parent, "developer", "")
                    new Node(parent, "id", property('id'))
                    new Node(parent, "name", property('username'))
                    new Node(parent, "organization", property('organization'))
                    new Node(parent, "organizationUrl", property('organizationUrl'))
                    new Node(parent, "email", property('email'))
                }

                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    bintray {
        user = property('bintrayUser')
        key = property('bintrayKey')

        publications = ['mavenJava']

        dryRun = false
        publish = true
        
        pkg {
            repo = 'thepathfinder'
            userOrg = 'csse497'
            name = 'pathfinder-android'
            desc = 'Android/Java client library for the Pathfinder service'
            websiteUrl = 'http://thepathfinder.xyz'
            issueTrackerUrl = 'https://github.com/CSSE497/pathfinder-android/issues'
            vcsUrl = 'https://github.com/CSSE497/pathfinder-android.git'
            licenses = ['MIT']
            labels = ['pathfinding', 'logistics', 'navigation']
            publicDownloadNumbers = true

            version {
                name = project.version
                desc = 'Initial release'
                released = new Date()

                gpg {
                    sign = true
                    passphrase = property('signing.password')
                }

                mavenCentralSync {
                    sync = true
                    user = property('ossrhUsername')
                    password = property('ossrhPassword')
                    close = '0'
                }
            }
        }
    }
}

dependencies {
    compile 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.12'
    compile 'com.google.code.gson:gson:2.5'
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'ch.qos.logback:logback-classic:1.1.3'
    testCompile 'ch.qos.logback:logback-core:1.1.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.glassfish.tyrus:tyrus-container-grizzly-server:1.12'
    testCompile 'org.glassfish.tyrus:tyrus-server:1.12'
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}
